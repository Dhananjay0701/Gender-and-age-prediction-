# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/175pfkQ2ja0uXpj7Nsip3wmiwOawvPidU
"""

import cv2
import numpy as np
import pafy

url = 'https://www.youtube.com/watch?v=2wcI10CNuxU'
vpafy = pafy.new(url)
play = vpafy.getbest(preftype = "mp4")

cap = cv2.VideoCapture(play.url)
cap.set(3, 480)
cap.set(4, 640)

MODEL_MEAN_VALUES = (78.4263377603, 87.7689143744, 114.895847746)

age_list = ['(0, 2)', '(4, 6)', '(8, 12)', '(15, 20)', '(25, 32)', '(38, 43)', '(48, 53)', '(60, 100)'] 

gender_list = ['MALE', 'FEMALE']

def caffe_models():
  
  gender_net = cv2.dnn.readNet('D:\Codes\Deep_learning\Gender_age\Deploy\deploy_gender.prototxt', 'gender_net.caffemodel')

  age_net = cv2.dnn.readNet('D:\Codes\Deep_learning\Gender_age\Deploy\deploy_age.prototxt', 'age_net.caffemodel')

 

  return(age_net, gender_net)

def video_detector(age_net, gender_net):
  font = cv2.FONT_HERSHEY_SIMPLEX

def main():

  while True:
    ret, image = cap.read()
    face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_alt.xml')
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, 1.1, 5)

    if (len(faces) > 0):
      print("Found {} faces".format(str(len(faces))))

    for (x, y, w, h) in faces:
      cv2.rectangle(image, (x, y), (x+w, y+h), (255, 255, 0), 2)

      face_img = image[y:y+h, x:x+w].copy()
      blob = cv2.dnn.blobFromImage(face_img, 1, (227, 227), MODEL_MEAN_VALUES, swapRB=False)

      gender_net.setInput(blob)
      gender_preds = gender_net.forward()
      gender = gender_list[gender_preds[0].argmax()]

      age_net.setInput(blob)
      age_preds = age_net.forward()
      age = age_list[age_preds[0].agrmax()]

    overlay_text = "%s %s" % (gender, age)
    cv2.putText(image, overlay_text, (x, y), font, 1, (255, 255, 255), 2, cv2.LINE_AA)

    cv2.imshow('frame', image)
    if cv2.waitKey(100000000) & 0xFF == ord('q'): 
      break
      
if __name__ == "__main__":
  age_net, gender_net = caffe_models()
  video_detector(age_net, gender_net)